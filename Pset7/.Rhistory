wage_gap = 0)
dt_sub[state==1]$wage_gap <- 4.25-dt_sub[state==1]$wage_st2
rm(list = ls())
dt_ff <- data.table::as.data.table(utils::read.delim(file = "fast-food-data.csv",
sep = ","))
dt_ff <- dt_ff %>% mutate(.data = dt_ff,
fte = empft+nmgrs+0.5*emppt,
fte2 = empft2+nmgrs2+0.5*emppt2)
#set all closed, permanently and temporarily, store fte2 as 0
dt_ff[status2 == 3]$wage_st2 <- 0
dt_sub <- dt_ff[which(!is.na(wage_st)
&!is.na(wage_st2)
& !is.na(fte)
& !is.na(fte2)
)]
dt_sub <-data.table::as.data.table(dt_sub)
nrow(dt_sub)
dt_sub <- dt_sub %>% mutate(data = dt_sub,
wage_gap = 0)
dt_sub[state==1]$wage_gap <- 4.25-dt_sub[state==1]$wage_st2
dt_sub <- dt_sub %>% mutate(data = dt_sub,
wage_gap = 0)
dt_sub[state==1]$wage_gap <- 4.25-dt_sub$wage_st2
dt_sub <- dt_sub %>% mutate(data = dt_sub,
wage_gap = 0)
dt_sub[state==1]$wage_gap <- 4.25-wage_st2
dt_sub <- dt_sub %>% mutate(data = dt_sub,
wage_gap = 0)
dt_sub[state==1]$wage_gap <- 4.25-dt_sub[state==1]$wage_st2
dt_sub <- dt_sub %>% mutate(data = dt_sub,
wage_gap = 4.25-dt_sub$wage_st2)
dt_sub[state==0]$wage_gap <- 0
dt_sub <- dt_sub %>% mutate(data = dt_sub,
wage_gap = 4.25-dt_sub$wage_st2)
dt_sub[dt_sub$state==0]$wage_gap <- 0
dt_sub <- dt_sub %>% mutate(data = dt_sub,
wage_gap = 4.25-dt_sub$wage_st2)
dt_sub[state==0]
dt_sub <- dt_sub %>% mutate(data = dt_sub,
wage_gap = 4.25-dt_sub$wage_st2)
dt_sub[dt_sub$state==0]
dt_sub <- dt_sub %>% mutate(data = dt_sub,
wage_gap = 4.25-dt_sub$wage_st2)
dt_sub[status2==0]
dt_sub <- dt_sub %>% mutate(data = dt_sub,
wage_gap = 4.25-dt_sub$wage_st2)
dt_sub
dt_sub <- dt_sub %>% mutate(data = dt_sub,
wage_gap = 4.25-wage_st2)
dt_sub
dt_sub <- dt_sub %>% mutate(data = dt_sub,
wage_gap = 4.25-wage_st2)
# lm2 <- stats::lm(data = dt_sub, formula = diff_fte ~ state+ as.factor(chain) + co_owned)
# summary(lm2)
dt_sub <- dt_sub %>% mutate(data = dt_sub,
wage_gap = 4.25-wage_st2)
%>% data.table::as.data.table(dt_sub)
dt_sub <- dt_sub %>% mutate(data = dt_sub,
wage_gap = 4.25-wage_st2)
%>% data.table::as.data.table(dt_sub)
dt_sub <- dt_sub %>% mutate(data = dt_sub,
wage_gap = 4.25-wage_st2)%>%
data.table::as.data.table(dt_sub)
# lm2 <- stats::lm(data = dt_sub, formula = diff_fte ~ state+ as.factor(chain) + co_owned)
# summary(lm2)
dt_sub <- dt_sub %>% mutate(data = dt_sub,
wage_gap = 4.25-wage_st2)%>%
data.table::as.data.table(dt_sub)
dt_sub[state==0]$wage_gap <- 0
# lm2 <- stats::lm(data = dt_sub, formula = diff_fte ~ state+ as.factor(chain) + co_owned)
# summary(lm2)
dt_sub <- dt_sub %>% mutate(data = dt_sub,
wage_gap = 4.25-wage_st2)%>%
data.table::as.data.table(dt_sub)
dt_sub[state==0]$wage_gap <- 0
lm3 <- stats::lm(data = dt_sub, formula = diff_fte ~ wage_gap)
dt_sub <- dt_sub %>% mutate(.data = dt_sub,
diff_fte = fte2-fte)
mean(dt_sub$diff_fte, na.rm = T)
sd(dt_sub$diff_fte)
dt_sub <- dt_sub %>% mutate(data = dt_sub,
wage_gap = 4.25-wage_st2)%>%
data.table::as.data.table(dt_sub)
dt_sub[state==0]$wage_gap <- 0
lm3 <- stats::lm(data = dt_sub, formula = diff_fte ~ wage_gap)
summary(lm3)
dt_sub <- dt_sub %>% mutate(data = dt_sub,
wage_gap = 5.05-wage_st)%>%
data.table::as.data.table(dt_sub)
dt_sub[state==0]$wage_gap <- 0
dt_sub[wage_st>5.05]$wage_gap <- 0
lm3 <- stats::lm(data = dt_sub, formula = diff_fte ~ wage_gap)
summary(lm3)
dt_sub <- dt_sub %>% mutate(data = dt_sub,
wage_gap = (5.05-wage_st)/wage_st)%>%
data.table::as.data.table(dt_sub)
dt_sub[state==0]$wage_gap <- 0
dt_sub[wage_st>5.05]$wage_gap <- 0
lm3 <- stats::lm(data = dt_sub, formula = diff_fte ~ wage_gap)
summary(lm3)
View(dt_sub)
dt_sub <- dt_sub %>% mutate(.data = dt_sub,
diff_fte = fte2-fte)
mean(dt_sub$diff_fte, na.rm = T)
sd(dt_sub$diff_fte)
rm(list = ls())
dt_ff <- data.table::as.data.table(utils::read.delim(file = "fast-food-data.csv",
sep = ","))
dt_ff <- dt_ff %>% mutate(.data = dt_ff,
fte = empft+nmgrs+0.5*emppt,
fte2 = empft2+nmgrs2+0.5*emppt2)
#set all closed, permanently and temporarily, store fte2 as 0
dt_ff[status2 == 3]$wage_st2 <- 0
dt_sub <- dt_ff[which(!is.na(wage_st)
&!is.na(wage_st2)
& !is.na(fte)
& !is.na(fte2)
)]
dt_sub <-data.table::as.data.table(dt_sub)
nrow(dt_sub)
dt_sub <- dt_sub %>% mutate(.data = dt_sub,
diff_fte = fte2-fte)
mean(dt_sub$diff_fte, na.rm = T)
sd(dt_sub$diff_fte)
lm1 <- stats::lm(data = dt_sub, formula = diff_fte ~ state)
summary(lm1)
lm2 <- stats::lm(data = dt_sub, formula = diff_fte ~ state+ as.factor(chain) + co_owned)
summary(lm2)
dt_sub <- dt_sub %>% mutate(data = dt_sub,
wage_gap = (5.05-wage_st)/wage_st)%>%
data.table::as.data.table(dt_sub)
dt_sub[state==0]$wage_gap <- 0
dt_sub[wage_st>5.05]$wage_gap <- 0
lm3 <- stats::lm(data = dt_sub, formula = diff_fte ~ wage_gap)
summary(lm3)
dt_sub <- dt_sub %>% mutate(data = dt_sub,
gap = (5.05-wage_st)/wage_st)%>%
data.table::as.data.table(dt_sub)
dt_sub[state==0]$gap <- 0
dt_sub[wage_st>5.05]$gap <- 0
lm3 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap)
summary(lm3)
dt_sub <- dt_sub %>% mutate(data = dt_sub,
gap = (5.05-wage_st)/wage_st)%>%
dt_sub[state==0]$gap <- 0
dt_sub <- dt_sub %>% mutate(data = dt_sub,
gap = (5.05-wage_st)/wage_st)
dt_sub[state==0]$gap <- 0
rm(list = ls())
dt_ff <- data.table::as.data.table(utils::read.delim(file = "fast-food-data.csv",
sep = ","))
dt_ff <- dt_ff %>% mutate(.data = dt_ff,
fte = empft+nmgrs+0.5*emppt,
fte2 = empft2+nmgrs2+0.5*emppt2)
#set all closed, permanently and temporarily, store fte2 as 0
dt_ff[status2 == 3]$wage_st2 <- 0
dt_sub <- dt_ff[which(!is.na(wage_st)
&!is.na(wage_st2)
& !is.na(fte)
& !is.na(fte2)
)]
dt_sub <-data.table::as.data.table(dt_sub)
nrow(dt_sub)
dt_sub <- dt_sub %>% mutate(data = dt_sub,
gap = (5.05-wage_st)/wage_st)
# dt_sub[state==0]$gap <- 0
# dt_sub[wage_st>5.05]$gap <- 0
#
# lm3 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap)
# summary(lm3)
dt_sub <- dt_sub %>% mutate(data = dt_sub,
gap = (5.05-wage_st)/wage_st)
dt_sub <- data.table::as.data.table(dt_sub)
dt_sub[state==0]$gap <- 0
dt_sub[wage_st>5.05]$gap <- 0
lm3 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap)
rm(list = ls())
dt_ff <- data.table::as.data.table(utils::read.delim(file = "fast-food-data.csv",
sep = ","))
dt_ff <- dt_ff %>% mutate(.data = dt_ff,
fte = empft+nmgrs+0.5*emppt,
fte2 = empft2+nmgrs2+0.5*emppt2)
#set all closed, permanently and temporarily, store fte2 as 0
dt_ff[status2 == 3]$wage_st2 <- 0
dt_sub <- dt_ff[which(!is.na(wage_st)
&!is.na(wage_st2)
& !is.na(fte)
& !is.na(fte2)
)]
dt_sub <-data.table::as.data.table(dt_sub)
nrow(dt_sub)
dt_sub <- dt_sub %>% mutate(data = dt_sub,
gap = ifelse(which(wage_st<5.05 & state == 1), (5.05-wage_st)/wage_st, 0)
)
dt_sub <- dt_sub %>% mutate(data = dt_sub,
gap = (5.05-wage_st)/wage_st
)
dt_sub <- data.table::as.data.table(dt_sub)
dt_sub[state==0]$gap <- 0
dt_sub[wage_st>5.05]$gap <- 0
lm3 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap)
View(dt_sub)
rm(list = ls())
dt_ff <- data.table::as.data.table(utils::read.delim(file = "fast-food-data.csv",
sep = ","))
dt_ff <- dt_ff %>% mutate(.data = dt_ff,
fte = empft+nmgrs+0.5*emppt,
fte2 = empft2+nmgrs2+0.5*emppt2)
#set all closed, permanently and temporarily, store fte2 as 0
dt_ff[status2 == 3]$wage_st2 <- 0
dt_sub <- dt_ff[which(!is.na(wage_st)
&!is.na(wage_st2)
& !is.na(fte)
& !is.na(fte2)
)]
dt_sub <-data.table::as.data.table(dt_sub)
nrow(dt_sub)
dt_sub <- dt_sub %>% mutate(data = dt_sub,
gap = (5.05-wage_st)/wage_st
)
dt_sub[state==0]$gap <- 0
dt_sub <- dt_sub %>% mutate(data = dt_sub,
gap = (5.05-wage_st)/wage_st
)
dt_sub[dt_sub$state==0]$gap <- 0
dt_sub <- mutate(data = dt_sub,
gap = (5.05-wage_st)/wage_st
)
rm(list = ls())
dt_ff <- data.table::as.data.table(utils::read.delim(file = "fast-food-data.csv",
sep = ","))
dt_ff <- dt_ff %>% mutate(.data = dt_ff,
fte = empft+nmgrs+0.5*emppt,
fte2 = empft2+nmgrs2+0.5*emppt2)
#set all closed, permanently and temporarily, store fte2 as 0
dt_ff[status2 == 3]$wage_st2 <- 0
dt_sub <- dt_ff[which(!is.na(wage_st)
&!is.na(wage_st2)
& !is.na(fte)
& !is.na(fte2)
)]
nrow(dt_sub)
dt_sub <- dt_sub%>% mutate(data = dt_sub,
gap = (5.05-wage_st)/wage_st
)
dt_sub[dt_sub$state==0]$gap <- 0
dt_sub <- dt_sub%>% mutate(data = dt_sub,
gap = (5.05-wage_st)/wage_st
)
dt_sub <- data.table::as.data.table(dt_sub)
dt_sub[dt_sub$state==0]$gap <- 0
#dt_sub[wage_st>5.05]$gap <- 0
lm3 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap)
dt_sub <- dt_sub%>% mutate(data = dt_sub,
gap = (5.05-wage_st)/wage_st
)
dt_sub <- data.table::as.data.table(dt_sub)
dt_sub[state==0]$gap <- 0
dt_sub[wage_st>5.05]$gap <- 0
lm3 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap)
dt_sub <- dt_sub %>% mutate(.data = dt_sub,
diff_fte = fte2-fte)
mean(dt_sub$diff_fte, na.rm = T)
sd(dt_sub$diff_fte)
dt_sub <- dt_sub%>% mutate(data = dt_sub,
gap = (5.05-wage_st)/wage_st
)
dt_sub <- data.table::as.data.table(dt_sub)
dt_sub[state==0]$gap <- 0
dt_sub[wage_st>5.05]$gap <- 0
lm3 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap)
summary(lm3)
dt_sub <- dt_sub%>% mutate(data = dt_sub,
gap = (5.05-wage_st)/wage_st
)
dt_sub <- data.table::as.data.table(dt_sub)
dt_sub[state==0]$gap <- 0
dt_sub[wage_st>5.05]$gap <- 0
lm3 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap)
summary(lm3)
dt_sub <- dt_sub%>% mutate(data = dt_sub,
gap = (5.05-wage_st)/wage_st
)
dt_sub[state==0]$gap <- 0
rm(list = ls())
dt_ff <- data.table::as.data.table(utils::read.delim(file = "fast-food-data.csv",
sep = ","))
dt_ff <- dt_ff %>% mutate(.data = dt_ff,
fte = empft+nmgrs+0.5*emppt,
fte2 = empft2+nmgrs2+0.5*emppt2)
#set all closed, permanently and temporarily, store fte2 as 0
dt_ff[status2 == 3]$wage_st2 <- 0
dt_sub <- dt_ff[which(!is.na(wage_st)
&!is.na(wage_st2)
& !is.na(fte)
& !is.na(fte2)
)]
nrow(dt_sub)
dt_sub <- dt_sub %>% mutate(.data = dt_sub,
diff_fte = fte2-fte)
mean(dt_sub$diff_fte, na.rm = T)
sd(dt_sub$diff_fte)
dt_sub <- dt_sub%>% mutate(data = dt_sub,
gap = (5.05-wage_st)/wage_st
)
dt_sub[state==0]$gap <- 0
dt_sub <- dt_sub%>% mutate(data = dt_sub,
gap = case_when(
state == 0 ~ 0,
state == 1 & wage_st>=5.05 ~ 0,
state == 1 & wage_st<5.05 ~ (5.05-wage_st)/wage_st
)
)
lm3 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap)
summary(lm3)
lm4 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap + as.factor(chain) + co_owned)
summary(lm4)
lm5 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap + as.factor(chain) + co_owned + southj + centralj + pa2)
summary(lm5)
lm5 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap + as.factor(chain) + co_owned + southj + centralj + pa1+pa2)
summary(lm5)
lm5 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap + as.factor(chain) + co_owned + southj + centralj+northj + pa1+pa2)
summary(lm5)
lm5 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap + as.factor(chain) + co_owned + southj + centralj+northj+shore + pa1+pa2)
summary(lm5)
lm5 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap + as.factor(chain) + co_owned  + centralj+northj+shore + pa1+pa2)
summary(lm5)
lm5 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap + as.factor(chain) + co_owned  +northj+shore + pa1+pa2)
summary(lm5)
lm5 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap + as.factor(chain) + co_owned  + centralj+northj + pa1+pa2)
summary(lm5)
lm5 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap + as.factor(chain) + co_owned  + centralj+shore + pa1+pa2)
summary(lm5)
lm5 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap + as.factor(chain) + co_owned + southj + centralj+northj + pa1+pa2)
summary(lm5)
lm5 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap + as.factor(chain) + co_owned + southj + centralj+northj+shore + pa1+pa2)
summary(lm5)
lm5 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap + as.factor(chain) + co_owned + southj + centralj+northj + pa1+pa2)
summary(lm5)
lm5 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap + as.factor(chain) + co_owned + pa2)
summary(lm5)
lm5 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap + as.factor(chain) + co_owned + pa1 + pa2)
summary(lm5)
lm5 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap + as.factor(chain) + co_owned + pa1 + pa2+ centralj)
summary(lm5)
lm5 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap + as.factor(chain) + co_owned + pa1 + pa2+ centralj+northj)
summary(lm5)
lm5 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap + as.factor(chain) + co_owned + pa1 + pa2+ centralj+northj+southj)
summary(lm5)
lm5 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap + as.factor(chain) + co_owned + pa1 + pa2+ centralj+northj+southj+shore)
summary(lm5)
lm5 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap + as.factor(chain) + co_owned + pa1 + pa2+ centralj+northj+southj)
summary(lm5)
source("./Functions.R")
install_packages_if_needed(c("utils", 'tidyr', 'plm', 'miceadds'))
library(tidyr)
library(dplyr)
library(stats)
#Import the csv files
dt_psid <- data.table::as.data.table(utils::read.delim(file = "nswpsid.csv",
sep = ","))
#for future use, we add an variable, id, to dt_psid:
dt_psid <- dt_psid %>% dplyr::mutate(.data = dt_psid, id = dplyr::row_number())
dt_long <- tidyr::gather(dt_psid, dyear2, earns, re75:re78)
nrow(dt_long)
dt_long$dyear2<-ifelse(dt_long$dyear2=="re78",1,0)
dt_long <-
dt_long %>%
dplyr::mutate(
.data = dt_long,
tdyear2 = treat*dyear2
)
dt_treat <- dt_long[dt_long$treat == 1,]
nrow(dt_treat)
fo2 <- as.formula("earns ~ dyear2")
ba <- stats::lm(formula = fo2, data = dt_treat)
summary(ba)
mean(dt_treat[dt_treat$dyear2==1,]$earns)-mean(dt_treat[dt_treat$dyear2==0,]$earns)
fo3 <- as.formula("re78 - re75 ~ treat")
fd<-stats::lm(formula = fo3, data = dt_psid)
summary(fd)
fo4 <- as.formula("earns ~ tdyear2 + as.factor(id) + as.factor(dyear2)")
lsdv <- stats::lm(formula = fo4, data = dt_long)
lsdv$coefficients[2]
pdata <- plm::pdata.frame(dt_long, index = c('id', 'dyear2'))
twfe <- plm::plm(formula = earns ~ tdyear2, data = pdata, model = 'within', effect = 'twoways')
twfe$coefficients[1]
dd <- stats::lm(formula = earns ~ dyear2 + treat + tdyear2, data = dt_long)
dd$coefficients[4]
#earns treat=1, year=78
e11 <- mean(dt_long[which(dt_long$treat==1 & dt_long$dyear2==1),]$earns)
#earns treat=0, year=78
e01 <- mean(dt_long[which(dt_long$treat==0 & dt_long$dyear2==1),]$earns)
#earns treat=1, year=75
e10 <- mean(dt_long[which(dt_long$treat==1 & dt_long$dyear2==0),]$earns)
#earns treat=0, year=75
e00 <- mean(dt_long[which(dt_long$treat==0 & dt_long$dyear2==0),]$earns)
(e11-e10)-(e01-e00)
rm(list = ls())
dt_ff <- data.table::as.data.table(utils::read.delim(file = "fast-food-data.csv",
sep = ","))
dt_ff %>%
group_by(state) %>%
summarise(
total_count = n(),
closed_permanently = sum(status2 == 3),
closed_for_renovations = sum(status2 == 2),
closed_temporarily = sum(status2>3),
refused_second_interview = sum(status2==0),
answered_2nd_interview = sum(status2==1)
)
dt_ff <- dt_ff %>% mutate(.data = dt_ff,
fte = empft+nmgrs+0.5*emppt,
fte2 = empft2+nmgrs2+0.5*emppt2)
dt_ff %>% group_by(state)%>%
summarise(
mean_fte = mean(fte, na.rm = T),
mean_fte2 = mean(fte2, na.rm = T)
)
# lm_fte <- lm(formula = fte ~ state, data = dt_ff)
# summary(lm_fte)
ttest1 <- t.test(formula = fte ~ state, data = dt_ff)
ttest2 <- t.test(formula = fte2 ~ state, data = dt_ff)
ttest1$estimate
std_err(dt_ff[which(state==0 & !is.na(fte))]$fte)
std_err(dt_ff[which(state==0 & !is.na(fte))]$fte)
source("./Functions.R")
install_packages_if_needed(c("utils", 'tidyr', 'plm', 'miceadds'))
library(tidyr)
library(dplyr)
library(stats)
std_err(dt_ff[which(state==0 & !is.na(fte))]$fte)
std_err(dt_ff[which(state==1 & !is.na(fte))]$fte)
ttest1$estimate[2]-ttest1$estimate[1]
ttest1$stderr
ttest2$estimate
print(c(std_err(dt_ff[which(state==0 & !is.na(fte2))]$fte2),std_err(dt_ff[which(state==1 & !is.na(fte2))]$fte2)))
ttest2$estimate[2]-ttest2$estimate[1]
ttest2$stderr
dt_ff <- dt_ff %>% mutate(.data = dt_ff, d_fte = fte2-fte)
ttest3 <- t.test(formula = d_fte ~ state, data = dt_ff)
ttest3$estimate
print(c(std_err(dt_ff[which(state==0 & !is.na(d_fte))]$d_fte),std_err(dt_ff[which(state==1 & !is.na(d_fte))]$d_fte)))
ttest3$estimate[2]-ttest3$estimate[1]
ttest3$stderr
dt_ff[status2 >=4]$d_fte <- -dt_ff[status2 >=4]$fte
dt_ff[status2 ==2]$d_fte <- -dt_ff[status2 ==2]$fte
ttest4 <- t.test(formula = d_fte ~ state, data = dt_ff)
ttest4$estimate
print(c(std_err(dt_ff[which(state==0 & !is.na(d_fte))]$d_fte),std_err(dt_ff[which(state==1 & !is.na(d_fte))]$d_fte)))
ttest4$estimate[2]-ttest4$estimate[1]
ttest4$stderr
dt_ff_long <- tidyr::gather(dt_ff, wave, fte, fte:fte2)
dt_ff_long <- data.table::as.data.table(dt_ff_long)
dt_ff_long$wave<-ifelse(dt_ff_long$wave=="fte",0,1)
dt_ff_long <- dt_ff_long %>% mutate (.data = dt_ff_long,
statewave = state*wave)
fo <- as.formula('fte ~ wave + state + statewave')
lm1 <- miceadds::lm.cluster(data = dt_ff_long, formula = fo, cluster = "store_id")
summary(lm1)
dt_ff_long[which(status2==2 & wave ==1)]$fte <- 0
dt_ff_long[which(status2>=4 & wave ==1)]$fte <- 0
lm2 <- miceadds::lm.cluster(data = dt_ff_long, formula = fo, cluster = "store_id")
summary(lm2)
rm(list = ls())
dt_ff <- data.table::as.data.table(utils::read.delim(file = "fast-food-data.csv",
sep = ","))
dt_ff <- dt_ff %>% mutate(.data = dt_ff,
fte = empft+nmgrs+0.5*emppt,
fte2 = empft2+nmgrs2+0.5*emppt2)
#set all closed, permanently and temporarily, store fte2 as 0
dt_ff[status2 == 3]$wage_st2 <- 0
dt_sub <- dt_ff[which(!is.na(wage_st)
&!is.na(wage_st2)
& !is.na(fte)
& !is.na(fte2)
)]
nrow(dt_sub)
dt_sub <- dt_sub %>% mutate(.data = dt_sub,
diff_fte = fte2-fte)
mean(dt_sub$diff_fte, na.rm = T)
sd(dt_sub$diff_fte)
lm1 <- stats::lm(data = dt_sub, formula = diff_fte ~ state)
summary(lm1)
lm2 <- stats::lm(data = dt_sub, formula = diff_fte ~ state+ as.factor(chain) + co_owned)
summary(lm2)
#create new variable gap
dt_sub <- dt_sub%>% mutate(data = dt_sub,
gap = case_when(
state == 0 ~ 0,
state == 1 & wage_st>=5.05 ~ 0,
state == 1 & wage_st<5.05 ~ (5.05-wage_st)/wage_st
)
)
lm3 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap)
summary(lm3)
lm4 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap + as.factor(chain) + co_owned)
summary(lm4)
lm5 <- stats::lm(data = dt_sub, formula = diff_fte ~ gap + as.factor(chain) + co_owned + pa1 + pa2+ centralj+northj+southj)
summary(lm5)
Functions.std_err(dt_ff[which(state==0 & !is.na(fte))]$fte)
source("./Functions.R")
install_packages_if_needed(c("utils", 'tidyr', 'plm', 'miceadds'))
library(tidyr)
library(dplyr)
library(stats)
Functions.std_err(dt_ff[which(state==0 & !is.na(fte))]$fte)
std_err(dt_ff[which(state==0 & !is.na(fte))]$fte)
std_err(dt_ff[which(state==1 & !is.na(fte))]$fte)
source("./Functions.R")
std_err(dt_ff[which(state==0 & !is.na(fte))]$fte)
std_err(dt_ff[which(state==1 & !is.na(fte))]$fte)
