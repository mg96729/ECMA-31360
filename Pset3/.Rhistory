df1 <- data.frame(utils::read.delim("nswre74_control.csv"))
View(df1)
source("./Functions.R")
install_packages_if_needed(c("utils"))
df1 <- data.frame(utils::read.delim(file = "nswre74_control.csv",
sep = ","))
View(df1)
source("./Functions.R")
install_packages_if_needed(c("utils"))
df1 <- data.frame(utils::read.delim(file = "nswre74_control.csv",
sep = ","))
df2 <- data.frame(utils::read.delim(file = "nswre74_treated.csv",
sep = ","))
df<- rbind(df1, df2)
View(df)
dplyr::tally(dplyr::group by(df, treat))
dplyr::tally(dplyr::group_by(df, treat))
dplyr::tally(dplyr::group_by(df, treat))%>% dplyr::summarise all(list(mean))
dplyr::tally(dplyr::group_by(df, treat))%>% dplyr::summarise_all(list(mean))
dplyr::tally(dplyr::group_by(df, treat))%>% dplyr::summarise_all(list(mean))
source("./Functions.R")
install_packages_if_needed(c("utils"))
################################################################################
#Part1, Q1: Import and Describe the Data
df1 <- data.frame(utils::read.delim(file = "nswre74_control.csv",
sep = ","))
df2 <- data.frame(utils::read.delim(file = "nswre74_treated.csv",
sep = ","))
df<- rbind(df1, df2)
dplyr::tally(dplyr::group_by(df, treat))%>% dplyr::summarise_all(list(mean))
dplyr::tally(dplyr::group_by(df, treat))%>% dplyr::summarise.all(list(mean))
dplyr::tally(dplyr::group_by(df, treat))%>% dplyr::summarise_all(list(mean))
dplyr::tally(dplyr::group_by(df, treat))%>% dplyr::summarise_all(df, list(mean))
dplyr::tally(dplyr::group_by(df, treat))%>% dplyr::summarise_all(df, funs=list(mean))
dplyr::tally(dplyr::group_by(df, treat))%>% dplyr::summarise_all(list(mean))
dplyr::summarise_all(.tbl=df, .funs=list(mean))
dplyr::summarise_at(.tbl=df, .vars=treat.funs=list(mean))
dplyr::summarise_at(.tbl=df, .vars=treat, .funs=list(mean))
dplyr::tally(dplyr::group_by(df, treat))%>% dplyr::summarise_all(.tbl=df, .funs=list(mean))
dplyr::summarise_at(.tbl=df, .vars=treat, .funs=list(mean))
dplyr::summarise_all(.tbl=df1, .vars=treat, .funs=list(mean))
dplyr::summarise_all(.tbl=df1, .funs=list(mean))
View(df1)
dplyr::group_by(df, treat)%>% dplyr::summarise_all(.tbl=df, .funs=list(mean))
dplyr::group_by(df, treat)%>% dplyr::summarise_all(.funs=list(mean))
#Tally the number of treated vs control
dplyr::tally(dplyr::group_by(df, treat))
getwd()
#Q1
colnames(df)
#Q1
list_colnames <- as.list(colnames(df))
class(list_colnames)
list_colnames[1]
list_OPVs <- as.list(colnames(df))
list_OPVs <- list_OPVs[x != "treat"]
list_OPVs <- list_OPVs[list_OPVs != "treat"]
View(list_OPVs)
list_OPVs <- list_OPVs[list_OPVs != "treat", "re78"]
list_OPVs <- list_OPVs[list_OPVs != c("treat", "re78")]
list_OPVs <- list_OPVs[!list_OPVs in c("treat", "re78")]
list_OPVs <- list_OPVs[!list_OPVs %in% c("treat", "re78")]
rm(list_colnames)
View(list_OPVs)
for (x in list_OPVs)
cat(x)
print(x)
for (x in list_OPVs)
print(x)
for (x in list_OPVs)
formula <- stats::formula(paste(x, ‘‘∼treat’’))
for (x in list_OPVs)
formula <- stats::formula(paste(x, "∼treat"))
for (x in list_OPVs)
formula <- stats::formula(paste(x, "∼ treat"))
formula <- stats::formula(paste(age, "∼ treat"))
formula <- stats::formula(paste("age", "∼ treat"))
formula <- stats::formula(paste("age", "∼treat"))
formula <- as.formula(paste("age", "~ treat"))
print(formula)
for (x in list_OPVs)
formula <- as.formula(paste(x, "∼ treat"))
for (x in list_OPVs)
fo <- as.formula(paste(x, "∼ treat"))
fo <- as.formula(paste(x, " ∼ treat"))
for (x in list_OPVs)
fo <- as.formula(paste(x, "∼treat"))
fo <- as.formula(paste(list_OPVs[1], "∼treat"))
list_OPVs[1]
class(list_OPVs[1])
to.string(list_OPVs[1]))
as.string(list_OPVs[1]))
as.string(list_OPVs[1])
toString(list_OPVs[1])
class(toString(list_OPVs[1]))
class("∼treat")
for (x in list_OPVs)
xname = toString(x)
fo <- as.formula(paste(xname, "∼treat"))
as.formula(paste(toString(list_OPVs[1]), "∼treat"))
as.formula(paste(toString(list_OPVs[1]), " ∼ treat"))
as.formula(paste(toString(list_OPVs[1]), "∼ treat"))
as.formula(paste("age", "∼ treat"))
as.formula(paste("age", "~ treat"))
fo <- as.formula(paste(xname, "∼ treat"))
as.formula(paste(c("age"), "~ treat"))
as.formula(paste(c("age"), "~treat"))
fo <- as.formula(paste(xname, "treat"))
fo <- as.formula(paste(xname, "~treat"))
as.formula(paste(c("age"), "~treat"))
for (x in list_OPVs)
xname = toString(x)
fo <- as.formula(paste(xname, "~treat"))
print(fo)
for (x in list_OPVs){
xname = toString(x)
fo <- as.formula(paste(xname, "~treat"))
print(fo)
}
for (x in list_OPVs){
xname = toString(x)
fo <- as.formula(paste(xname, "~treat"))
lm_model <- lm(formula = fo, data = df)
summary(lm_model)
}
for (x in list_OPVs){
xname = toString(x)
fo <- as.formula(paste(xname, "~treat"))
lm_model <- lm(formula = fo, data = df)
print(summary(lm_model))
}
for (x in list_OPVs){
xname = toString(x)
fo <- as.formula(paste(xname, "~treat"))
lm_model <- lm(formula = fo, data = df)
print(fo)
print(summary(lm_model))
}
for (x in list_OPVs){
xname = toString(x)
fo <- as.formula(paste(xname, "~treat"))
lm_model <- lm(formula = fo, data = df)
print(fo)
print(summary(lm_model)$coefficients)
}
for (x in list_OPVs){
xname = toString(x)
fo <- as.formula(paste(xname, "~treat"))
lm_model <- lm(formula = fo, data = df)
print(fo)
print(sumtable(lm_model)$coefficients)
}
for (x in list_OPVs){
xname = toString(x)
fo <- as.formula(paste(xname, "~treat"))
lm_model <- lm(formula = fo, data = df)
print(fo)
print(summary(lm_model)$coefficients)
}
x = list()
x
x <- append(x, 3)
x
rm(x)
list_fo = list()
for (x in list_OPVs){
xname = toString(x)
fo <- as.formula(paste(xname, "~treat"))
list_fo <- append(list_fo, fo)
}
list_fo
sur_fit <- systemfit::systemfit(formula = list_fo, data=df, method="SUR")
install_packages_if_needed(c("systemfit"))
sur_fit <- systemfit::systemfit(formula = list_fo, data=df, method="SUR")
summary(sur_fit)
View(lm_model)
View(sur_fit)
View(lm_model)
for (x in list_OPVs){
xname = toString(x)
fo <- as.formula(paste("treat~", xname))
lm_model <- lm(formula = fo, data = df)
print(fo)
print(summary(lm_model)$coefficients)
}
list_fo = list()
for (x in list_OPVs){
xname = toString(x)
fo <- as.formula(paste("treat~", xname))
list_fo <- append(list_fo, fo)
}
install_packages_if_needed(c("systemfit"))
sur_fit <- systemfit::systemfit(formula = list_fo, data=df, method="SUR")
print(summary(sur_fit))
for (x in list_OPVs){
xname = toString(x)
fo <- as.formula(paste(xname, "~treat"))
lm_model <- lm(formula = fo, data = df)
print(fo)
print(summary(lm_model)$coefficients)
}
list_fo = list()
for (x in list_OPVs){
xname = toString(x)
fo <- as.formula(paste(xname, "~treat"))
list_fo <- append(list_fo, fo)
}
install_packages_if_needed(c("systemfit"))
sur_fit <- systemfit::systemfit(formula = list_fo, data=df, method="SUR")
print(summary(sur_fit)$coefficients)
list_null_fo = list()
for (x in list_OPVs){
xname = toString(x)
fo <- as.formula(paste(xname, "~1"))
list_null_fo <-append(list_fo, fo)
}
#lmtest
install_packages_if_needed(c("lmtest"))
null_fit <- systemfit::systemfit(null_system, data =df, method = "SUR")
null_system = list()
for (x in list_OPVs){
xname = toString(x)
fo <- as.formula(paste(xname, "~1"))
null_system <-append(list_fo, fo)
}
#lmtest
install_packages_if_needed(c("lmtest"))
null_fit <- systemfit::systemfit(null_system, data =df, method = "SUR")
lrtest_obj <- lmtest::lrtest(null_fit,sur_fit).
null_system = list()
for (x in list_OPVs){
xname = toString(x)
fo <- as.formula(paste(xname, "~1"))
null_system <-append(list_fo, fo)
}
#lmtest
install_packages_if_needed(c("lmtest"))
null_fit <- systemfit::systemfit(null_system, data =df, method = "SUR")
lrtest_obj <- lmtest::lrtest(null_fit,sur_fit)
null_system = list()
for (x in list_OPVs){
xname = toString(x)
fo <- as.formula(paste(xname, "~1"))
null_system <-append(list_fo, fo)
}
null_system
null_system = list()
for (x in list_OPVs){
xname = toString(x)
fo <- as.formula(paste(xname, "~1"))
null_system <-append(null_system, fo)
}
null_system = list()
for (x in list_OPVs){
xname = toString(x)
fo <- as.formula(paste(xname, "~1"))
null_system <-append(null_system, fo)
}
null_system
null_system = list()
for (x in list_OPVs){
xname = toString(x)
fo <- as.formula(paste(xname, "~1"))
null_system <-append(null_system, fo)
}
null_system
#lmtest
install_packages_if_needed(c("lmtest"))
null_fit <- systemfit::systemfit(null_system, data =df, method = "SUR")
lrtest_obj <- lmtest::lrtest(null_fit,sur_fit)
print(summary(lrtest_obj))
print(lrtest_obj)
View(lrtest_obj)
write.table(lrtest_obj, file = 'lrtest.text')
write.table(lrtest_obj, file = "lrtext.txt", sep = ",", quote = FALSE, row.names = F)
write.table(lrtest_obj, file = "lrtext.txt", sep = ",", quote = FALSE, row.names = T)
#test "by hand"
stats::pchisq(20.0972901715468)
#test "by hand"
stats::pchisq(20.0972901715468, 10)
#test "by hand"
stats::pchisq(20.098, 10)
#test "by hand"
stats::pchisq(1, 10)
#test "by hand"
stats::pchisq(1, 1)
#test "by hand"
1-stats::pchisq(1, 1)
#test "by hand"
1-stats::pchisq(2, 1)
#test "by hand"
stats::pchisq(2, 1)
#test "by hand"
stats::pchisq(1, 1)
#test "by hand"
stats::pchisq(3, 1)
#test "by hand"
stats::pchisq(1, 2)
#test "by hand"
#Note: pchisq gives us the prob of chisq Below our value, not above.
1-stats::pchisq(1, 2)
#test "by hand"
#Note: pchisq gives us the prob of chisq Below our value, not above.
1-stats::pchisq(20.0972901715468, 10)
f <- "treat ~"
for (x in list_OPVs){
f <- cat(f, x, " ")
}
f
f <- "treat ~"
for (x in list_OPVs){
f <- cat(f, x, " ")
}
f <- as.formula(f)
f
f <- "treat ~"
for (x in list_OPVs){
f <- cat(f, x, " ")
}
f <- as.formula(toString(f))
#Q3
#create formula
f <- "treat ~"
for (x in list_OPVs){
f <- cat(f, x, " ")
}
f <- as.formula(f)
print(f)
View(f)
lm_obj <- lm(formula = f, data = df)
#Q3
#create formula
f <- "treat ~"
for (x in list_OPVs){
f <- cat(f, x)
}
f <- as.formula(f)
#Q3
#create formula
f <- "treat ~"
for (x in list_OPVs){
f <- cat(f, x)
}
f <- as.formula(f)
lm_obj <- lm(formula = f, data = df)
#Q3
#create formula
f <- "treat ~"
for (x in list_OPVs){
f <- paste(f, toString(x))
}
f <- as.formula(f)
#Q3
#create formula
f <- "treat ~"
for (x in list_OPVs){
f <- paste(f, x)
}
f <- as.formula(f)
#Q3
#create formula
f <- "treat ~"
for (x in list_OPVs){
f <- paste(f, x)
}
lm_obj <- lm(formula = f, data = df)
#Q3
#create formula
f <- "treat ~"
for (x in list_OPVs){
xname <- toString(x)
f <- paste(f, xname)
}
lm_obj <- lm(formula = f, data = df)
#Q3
#create formula
f <- "treat ~"
for (x in list_OPVs){
xname <- toString(x)
f <- paste(f, xname)
}
f
f <- as.formula(f)
#Q3
#create formula
f <- "treat ~"
for (x in list_OPVs){
xname <- toString(x)
f <- paste(f, xname, "+")
}
f
f <- substr(f, 1, nchar(f)-2)
f
lm_obj <- lm(formula = f, data = df)
summary(lm_obj)
summary(lm_obj)$fstatistic
r <- summary(lm_obj)$fstatistic
write.csv(r, "fstat_table.txt", sep=",")
write.table(r, "fstat_table.txt", sep=",")
write.table(r, "fstat_table.txt", sep=",", col.names = FALSE)
#Test "by hand"
stats::pf(q=2, df1=10)
#Test "by hand"
stats::pf(q=2, df1=10, df2=434)
#Test "by hand"
1-stats::pf(q=2, df1=10, df2=434)
group_mean <- df %>%
group_by(treat) %>%
summarise_at(vars(re78),
list(Mean_Frequency = mean))
dt <- data.table(df)
install_packages_if_needed(c("data.table"))
dt <- data.table(df)
#Q1
#spec 0
install_packages_if_needed(c("data.table"))
install_packages_if_needed(c("data.table"))
dt <- data.table(df)
#get mean for each variables, in treated vs control
dplyr::group_by(df, treat)%>% dplyr::summarise_all(.funs=list(mean))
#Q1
#spec 0
dplyr::group_by(df, treat)%>% dplyr::summarise_at(.vars=re78, .funs=list(mean))
#Q1
#spec 0
dplyr::group_by(df, treat)%>% dplyr::summarise_at(.vars="re78", .funs=list(mean))
stats::t.test(re78 ~ treat, data=df)
stats::t.test(re78 ~ treat, data=df)$coefficients
#spec 1
summary(lm(re78 ~ treat, data=df))
#spec 2
summary(lm(re78 ~ treat + nodegree + edu, data=df))
f <- "re78 ~"
for (x in list_OPVs){
xname <- toString(x)
f <- paste(f, xname, "+")
}
f <- paste(f, "treat")
f
summary(lm(formula = f, data = df))
summary(lm(formula=f, data=df))
#spec 3
#create formula
f <- "re78 ~"
for (x in list_OPVs){
xname <- toString(x)
f <- paste(f, xname, "+")
}
f <- paste(f, "treat")
summary(lm(formula = f, data = df))
#spec 4
f <- paste(f, "+ age*treat")
summary(lm(formula=f, data=df))
#spec 4
#add a variable
mean(age)
#spec 4
#add a variable
mean(age, df)
#spec 4
#add a variable
mean(age, data=df)
#spec 4
#add a variable
mean(df$age)
df %>%
mutate(agextreat = (age-mean(df$age))*treat)
df %>%
mutate(.data=df, agextreat = (age-mean(df$age))*treat)
df %>%
dplyr::mutate(.data=df, agextreat = (age-mean(df$age))*treat)
View(df)
summary(lm(formula=f, data=df))
#spec 3
#create formula
f <- "re78 ~"
for (x in list_OPVs){
xname <- toString(x)
f <- paste(f, xname, "+")
}
f <- paste(f, "treat")
summary(lm(formula = f, data = df))
#spec 4
#add a variable
mean(df$age)
df %>%
dplyr::mutate(.data=df, agextreat = (age-mean(df$age))*treat)
f<- paste(f, "+ agextreat")
summary(lm(formula=f, data=df))
#create formula
f <- "re78 ~"
for (x in list_OPVs){
xname <- toString(x)
f <- paste(f, xname, "+")
}
f <- paste(f, "treat")
summary(lm(formula = f, data = df))
#spec 4
#add a variable
mean(df$age)
df <-df %>%
dplyr::mutate(.data=df, agextreat = (age-mean(df$age))*treat)
f<- paste(f, "+ agextreat")
summary(lm(formula=f, data=df))
#Q2 d
#test joint hypothesis
install_packages_if_needed(c("car"))
# Test linear hypotheses
h_matrix = c("treat", "agextreat")
car::linearHypothesis(model = lm(formula=f, data=df), hypothesis.matrix=h_matrix)
car::linearHypothesis(model = lm(formula=f, data=df), hypothesis.matrix=c("treat"))
car::linearHypothesis(model = lm(formula=f, data=df), hypothesis.matrix=c("agextreat"))
